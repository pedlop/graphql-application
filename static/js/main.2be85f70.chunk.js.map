{"version":3,"sources":["context/auth-context.js","pages/Auth/Auth.js","components/Bookings/BookingList/BookingList.js","components/Bookings/BookingsChart/BookingsChart.js","components/Bookings/BookingsControls/BookingsControls.js","components/Loading/Loading.js","pages/Bookings/Bookings.js","components/Modal/Modal.js","components/Backdrop/Backdrop.js","components/Events/EventList/EventItem/EventItem.js","components/Events/EventList/EventList.js","pages/Events/Events.js","components/Navigation/MainNavigation.js","App.js","index.js"],"names":["React","createContext","token","userId","login","tokenExpiration","logout","AuthPage","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isLogin","switchModeHandler","setState","previousState","submitHandler","event","preventDefault","email","emailElement","current","value","password","passwordElement","trim","length","requestBody","query","variables","fetch","method","body","JSON","stringify","headers","Content-Type","then","res","status","Error","json","response","data","context","catch","err","console","log","createRef","react_default","a","createElement","className","onSubmit","htmlFor","type","id","ref","onClick","Component","contextType","AuthContext","bookingList","bookings","map","booking","key","_id","title","Date","createdAt","toLocaleDateString","onDelete","bind","BOOKINGS_BUCKETS","Cheap","min","max","Normal","Expensive","bookinkgsChart","chartData","labels","datasets","values","_loop","bucket","filteredBookingsCount","reduce","previous","price","push","fillColor","strokeColor","highlightFill","highlightStroke","toConsumableArray","style","textAlign","react_chartjs","bookingsControls","activeOutputType","onChange","loading","BookingsPage","outputType","fetchBookings","Authorization","concat","deleteBookingHandler","bookingId","filter","changeOutputTypeHandler","content","Loading_Loading","Fragment","BookingsControls_BookingsControls","BookingList_BookingList","BookingsChart","modal","children","canCancel","onCancel","canConfirm","onConfirm","confirmText","backdrop","eventItem","eventId","toLocaleString","minimumFractionDigits","maximumFractionDigits","date","creatorId","onDetail","eventList","events","EventItem_EventItem","authUserId","creator","onViewDetail","EventsPage","creating","selectedEvent","isActive","startCreateEventHandler","modalConfirmHandler","titleElementRef","priceElementRef","dateElementRef","description","descriptionElementRef","updatedEvents","createEvent","modalCancelHandler","showDetailHandler","find","e","bookEventHandler","fecthEvents","_this2","Backdrop_Backdrop","Modal_Modal","rows","EventList_EventList","mainNavigation","auth_context","Consumer","react_router_dom","to","App","Provider","Navigation_MainNavigation","react_router","from","exact","path","component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.2be85f70.chunk.js","sourcesContent":["import React from 'react';\n\nexport default React.createContext({\n  token: null,\n  userId: null,\n  login: (token, userId, tokenExpiration) => { },\n  logout: () => { }\n});","import React, { Component } from 'react';\n\nimport AuthContext from '../../context/auth-context';\n\nimport './Auth.css';\n\nclass AuthPage extends Component {\n  state = {\n    isLogin: true\n  }\n\n  static contextType = AuthContext;\n\n  constructor(props) {\n    super(props);\n    this.emailElement = React.createRef();\n    this.passwordElement = React.createRef();\n  }\n\n  switchModeHandler = () => {\n    this.setState(previousState => {\n      return { isLogin: !previousState.isLogin };\n    });\n\n  };\n\n  submitHandler = (event) => {\n    event.preventDefault();\n\n    const email = this.emailElement.current.value;\n    const password = this.passwordElement.current.value;\n\n    if (email.trim().length === 0 || password.trim().length === 0) {\n      return;\n    }\n\n    let requestBody = {\n      query: `\n        query Login($email: String!, $password: String!) {\n          login(email: $email, password: $password) {\n            userId\n            token\n            tokenExpiration\n          }\n        }\n      `,\n      variables: {\n        email: email,\n        password: password\n      }\n    };\n\n    if (!this.state.isLogin) {\n      requestBody = {\n        query: `\n          mutation CreateUser($email: String!, $password: String!) {\n            createUser(userInput: { email: $email, password: $password }) {\n              _id\n              email\n            }\n          }\n        `,\n        variables: {\n          email: email,\n          password: password\n        }\n      };\n    }\n\n    fetch('http://localhost:8000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    }).then(response => {\n      if (response.data.login.token) {\n        this.context.login(\n          response.data.login.token,\n          response.data.login.userId,\n          response.data.login.tokenExpiration\n        );\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  render() {\n    return (\n      <form className=\"auth-form\" onSubmit={this.submitHandler}>\n        <div className=\"form-control\">\n          <label htmlFor=\"email\">Email</label>\n          <input type=\"email\" id=\"email\" ref={this.emailElement} />\n        </div>\n        <div className=\"form-control\">\n          <label htmlFor=\"password\">Password</label>\n          <input type=\"password\" id=\"password\" ref={this.passwordElement} />\n        </div>\n        <div className=\"form-actions\">\n          <button type=\"button\" onClick={this.switchModeHandler}>Switch to {this.state.isLogin ? 'Signup' : 'Login'}</button>\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default AuthPage;","import React from 'react';\n\nimport './BookingList.css';\n\nconst bookingList = props => (\n  <ul className=\"bookings__list\">\n    {props.bookings.map(booking => {\n      return (\n        <li key={booking._id} className=\"bookings__item\">\n          <div className=\"bookinkgs__item-data\">\n            {booking.event.title} - {' '}\n            {new Date(booking.createdAt).toLocaleDateString('pt-BR')}\n          </div>\n          <div className=\"bookinkgs__item-actions\">\n            <button className=\"btn\" onClick={props.onDelete.bind(this, booking._id)}>Cancel</button>\n          </div>\n        </li>\n      );\n    })}\n  </ul>\n);\n\nexport default bookingList;","import React from 'react';\nimport { Bar as BarChart } from 'react-chartjs';\n\nconst BOOKINGS_BUCKETS = {\n  Cheap: {\n    min: 0,\n    max: 100\n  },\n  Normal: {\n    min: 100,\n    max: 200\n  },\n  Expensive: {\n    min: 200,\n    max: 10000000\n  }\n};\n\nconst bookinkgsChart = props => {\n  const chartData = { labels: [], datasets: [] };\n  let values = [];\n  for (const bucket in BOOKINGS_BUCKETS) {\n    const filteredBookingsCount = props.bookings.reduce((previous, current) => {\n      if (\n        current.event.price > BOOKINGS_BUCKETS[bucket].min &&\n        current.event.price < BOOKINGS_BUCKETS[bucket].max\n      ) {\n        return previous + 1;\n      } else {\n        return previous;\n      }\n    }, 0);\n    values.push(filteredBookingsCount);\n    // output[bucket] = filteredBookingsCount;\n    chartData.labels.push(bucket);\n    chartData.datasets.push({\n      // label: \"My First dataset\",\n      fillColor: \"rgba(220,220,220,0.5)\",\n      strokeColor: \"rgba(220,220,220,0.8)\",\n      highlightFill: \"rgba(220,220,220,0.75)\",\n      highlightStroke: \"rgba(220,220,220,1)\",\n      data: values\n    });\n    values = [...values];\n    values[values.length - 1] = 0;\n  }\n\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      <BarChart data={chartData} />\n    </div>\n  );\n};\n\nexport default bookinkgsChart; ","import React from 'react';\n\nimport './BookingsControls.css';\n\nconst bookingsControls = props => {\n  return (\n    <div className=\"bookings-control\">\n      <button className={props.activeOutputType === 'list' ? 'active' : ''} onClick={props.onChange.bind(this, 'list')}>\n        List\n      </button>\n      <button className={props.activeOutputType === 'chart' ? 'active' : ''} onClick={props.onChange.bind(this, 'chart')}>\n        Chart\n      </button>\n    </div>\n  );\n};\n\nexport default bookingsControls;","import React from 'react';\n\nimport './Loading.css';\n\nconst loading = () => (\n  <div className=\"plop-loading\">\n    <div className=\"plop-spinner\">\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  </div>\n);\n\nexport default loading;","import React, { Component } from 'react';\n\nimport BookingList from '../../components/Bookings/BookingList/BookingList';\nimport BookingsChart from '../../components/Bookings/BookingsChart/BookingsChart';\nimport BookingsControls from '../../components/Bookings/BookingsControls/BookingsControls';\nimport Loading from '../../components/Loading/Loading';\nimport AuthContext from '../../context/auth-context';\n\nclass BookingsPage extends Component {\n  state = {\n    bookings: [],\n    loading: false,\n    outputType: 'list'\n  };\n\n  static contextType = AuthContext;\n\n  componentDidMount() {\n    this.fetchBookings();\n  }\n\n  fetchBookings = () => {\n    this.setState({ loading: true });\n    const requestBody = {\n      query: `\n        query {\n          bookings {\n            _id\n            createdAt\n            event {\n              _id\n              title\n              date\n              price\n            }\n          }\n        }\n      `\n    };\n\n    fetch('http://localhost:8000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${this.context.token}`\n      }\n    }).then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    }).then(response => {\n      const bookings = response.data.bookings;\n      this.setState({ bookings: bookings, loading: false });\n    }).catch(err => {\n      console.log(err);\n      this.setState({ loading: false });\n    });\n  };\n\n  deleteBookingHandler = (bookingId) => {\n    this.setState({ loading: true });\n    const requestBody = {\n      query: `\n        mutation CancelBooking($id: ID!) {\n          cancelBooking(bookingId: $id) {\n            _id\n            title\n          }\n        }\n      `,\n      variables: {\n        id: bookingId\n      }\n    };\n\n    fetch('http://localhost:8000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${this.context.token}`\n      }\n    }).then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    }).then(response => {\n      this.setState(previousState => {\n        const updatedBookings = previousState.bookings.filter(booking => booking._id !== bookingId);\n        return { bookings: updatedBookings, loading: false };\n      });\n    }).catch(err => {\n      console.log(err);\n      this.setState({ loading: false });\n    });\n  };\n\n  changeOutputTypeHandler = outputType => {\n    if (outputType === 'list') {\n      this.setState({ outputType })\n    } else {\n      this.setState({ outputType: 'chart' })\n    }\n  };\n\n  render() {\n    let content = <Loading />;\n    if (!this.state.loading) {\n      content = (\n        <React.Fragment>\n          <BookingsControls\n            activeOutputType={this.state.outputType}\n            onChange={this.changeOutputTypeHandler}\n          />\n          <div>\n            {this.state.outputType === 'list' ? (\n              <BookingList\n                bookings={this.state.bookings}\n                onDelete={this.deleteBookingHandler}\n              />\n            ) : (\n                <BookingsChart bookings={this.state.bookings} />\n              )}\n          </div>\n        </React.Fragment>\n      );\n    }\n    return (\n      <React.Fragment>\n        {content}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default BookingsPage;","import React from 'react';\n\nimport './Modal.css';\n\nconst modal = props => (\n  <div className=\"modal\">\n    <header className=\"modal__header\">\n      <h1>{props.title}</h1>\n    </header>\n    <section className=\"modal__content\">{props.children}</section>\n    <section className=\"modal__actions\">\n      {props.canCancel && (\n        <button className=\"btn\" onClick={props.onCancel}>Cancel</button>\n      )}\n      {props.canConfirm && (\n        <button className=\"btn\" onClick={props.onConfirm}>{props.confirmText}</button>\n      )}\n    </section>\n  </div>\n);\n\nexport default modal;","import React from 'react';\n\nimport './Backdrop.css';\n\nconst backdrop = props => <div className=\"backdrop\"></div>\n\nexport default backdrop;","import React from 'react';\n\nimport './EventItem.css';\n\nconst eventItem = props => (\n  <li key={props.eventId} className=\"events__list-item\">\n    <div>\n      <h1>{props.title}</h1>\n      <h2>\n        R$ {(props.price).toLocaleString('pt-BR', {\n          minimumFractionDigits: 2,\n          maximumFractionDigits: 2\n        })} - {new Date(props.date).toLocaleDateString('pt-BR')}\n      </h2>\n    </div>\n    <div>\n      {props.userId === props.creatorId ? (\n        <p>Your the owner of this event.</p>\n      ) : (\n          <button className=\"btn\" onClick={props.onDetail.bind(this, props.eventId)}>\n            View Details\n          </button>\n        )}\n    </div>\n  </li>\n);\n\nexport default eventItem;","import React from 'react';\n\nimport EventItem from './EventItem/EventItem';\nimport './EventList.css';\n\nconst eventList = props => {\n  const events = props.events.map(event => {\n    return (\n      <EventItem\n        key={event._id}\n        eventId={event._id}\n        title={event.title}\n        price={event.price}\n        date={event.date}\n        userId={props.authUserId}\n        creatorId={event.creator._id}\n        onDetail={props.onViewDetail}\n      />\n    );\n  });\n\n  return (\n    <ul className=\"event__list\">{events}</ul>\n  );\n};\n\nexport default eventList;","import React, { Component } from 'react';\n\nimport Modal from '../../components/Modal/Modal';\nimport Backdrop from '../../components/Backdrop/Backdrop';\nimport EventList from '../../components/Events/EventList/EventList';\nimport Loading from '../../components/Loading/Loading';\nimport AuthContext from '../../context/auth-context';\nimport './Events.css';\n\nclass EventsPage extends Component {\n  state = {\n    creating: false,\n    events: [],\n    loading: false,\n    selectedEvent: null\n  };\n  isActive = true;\n\n  static contextType = AuthContext;\n\n  constructor(props) {\n    super(props);\n    this.titleElementRef = React.createRef();\n    this.priceElementRef = React.createRef();\n    this.dateElementRef = React.createRef();\n    this.descriptionElementRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.fecthEvents();\n  }\n\n  startCreateEventHandler = () => {\n    this.setState({ creating: true });\n  };\n\n  modalConfirmHandler = () => {\n    const title = this.titleElementRef.current.value;\n    const price = +this.priceElementRef.current.value;\n    const date = this.dateElementRef.current.value;\n    const description = this.descriptionElementRef.current.value;\n\n    if (\n      title.trim().length === 0 ||\n      price <= 0 ||\n      date.trim().length === 0 ||\n      description.trim().length === 0\n    ) {\n      return;\n    }\n\n    const requestBody = {\n      query: `\n        mutation CreateEvent($title: String!, $description: String!, $price: Float!, $date: String!) {\n          createEvent(eventInput: { title: $title, description: $description, price: $price, date: $date }) {\n            _id\n            title\n            description\n            price\n            date\n          }\n        }\n      `,\n      variables: {\n        title,\n        description,\n        price,\n        date\n      }\n    };\n\n    const token = this.context.token;\n\n    fetch('http://localhost:8000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    }).then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    }).then(response => {\n      this.setState(previousState => {\n        const updatedEvents = [...previousState.events];\n        updatedEvents.push({\n          _id: response.data.createEvent._id,\n          title: response.data.createEvent.title,\n          description: response.data.createEvent.description,\n          price: response.data.createEvent.price,\n          date: response.data.createEvent.date,\n          creator: {\n            _id: this.context.userId,\n          }\n        });\n        return { events: updatedEvents };\n      });\n      this.setState({ creating: false });\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  modalCancelHandler = () => {\n    this.setState({ creating: false, selectedEvent: null });\n  };\n\n  fecthEvents() {\n    this.setState({ loading: true });\n    const requestBody = {\n      query: `\n        query {\n          events {\n            _id\n            title\n            description\n            price\n            date\n            creator {\n              _id\n              email\n            }\n          }\n        }\n      `\n    };\n\n    fetch('http://localhost:8000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    }).then(response => {\n      const events = response.data.events;\n      if (this.isActive) {\n        this.setState({ events: events, loading: false });\n      }\n    }).catch(err => {\n      console.log(err);\n      if (this.isActive) {\n        this.setState({ loading: false });\n      }\n    });\n  };\n\n  showDetailHandler = eventId => {\n    this.setState(previousState => {\n      const selectedEvent = previousState.events.find(e => e._id === eventId);\n      return { selectedEvent };\n    });\n  };\n\n  bookEventHandler = () => {\n    const token = this.context.token;\n\n    if (!token) {\n      this.setState({ selectedEvent: null });\n      return;\n    }\n    const requestBody = {\n      query: `\n        mutation BookEvent($id: ID!) {\n          bookEvent(eventId: $id) {\n            _id\n            createdAt\n            updatedAt\n          }\n        }\n      `,\n      variables: {\n        id: this.state.selectedEvent._id\n      }\n    };\n\n    fetch('http://localhost:8000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    }).then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    }).then(response => {\n      this.setState({ selectedEvent: null });\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  componentWillUnmount() {\n    this.isActive = false;\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        {(this.state.creating || this.state.selectedEvent) && <Backdrop />}\n        {this.state.creating && (\n          <Modal title=\"Add Event\" canCancel canConfirm onCancel={this.modalCancelHandler} onConfirm={this.modalConfirmHandler} confirmText=\"Confirm\">\n            <form>\n              <div className=\"form-control\">\n                <label htmlFor=\"title\">Title</label>\n                <input type=\"text\" id=\"title\" ref={this.titleElementRef}></input>\n              </div>\n              <div className=\"form-control\">\n                <label htmlFor=\"price\">Price</label>\n                <input type=\"number\" id=\"price\" ref={this.priceElementRef}></input>\n              </div>\n              <div className=\"form-control\">\n                <label htmlFor=\"date\">Date</label>\n                <input type=\"datetime-local\" id=\"date\" ref={this.dateElementRef}></input>\n              </div>\n              <div className=\"form-control\">\n                <label htmlFor=\"description\">Description</label>\n                <textarea id=\"description\" rows=\"4\" ref={this.descriptionElementRef} />\n              </div>\n            </form>\n          </Modal>\n        )}\n        {this.state.selectedEvent && (\n          <Modal\n            title={this.state.selectedEvent.title}\n            canCancel canConfirm\n            onCancel={this.modalCancelHandler}\n            onConfirm={this.bookEventHandler}\n            confirmText={this.context.token ? 'Book' : 'Confirm'}\n          >\n            <h1>{this.state.selectedEvent.title}</h1>\n            <h2>\n              R$ {(this.state.selectedEvent.price).toLocaleString('pt-BR', {\n                minimumFractionDigits: 2,\n                maximumFractionDigits: 2\n              })} - {new Date(this.state.selectedEvent.date).toLocaleDateString('pt-BR')}\n            </h2>\n            <p>{this.state.selectedEvent.description}</p>\n          </Modal>\n        )}\n        {this.context.token && (\n          <div className=\"events-control\">\n            <p>Share your own Events!</p>\n            <button className=\"btn\" onClick={this.startCreateEventHandler}>Create Event</button>\n          </div>\n        )}\n        {this.state.loading ? (\n          <Loading />\n        ) : (\n            <EventList events={this.state.events} authUserId={this.context.userId} onViewDetail={this.showDetailHandler} />\n          )}\n\n      </React.Fragment>\n    );\n  }\n}\n\nexport default EventsPage;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport AuthContext from '../../context/auth-context';\n\nimport './MainNavigation.css';\n\nconst mainNavigation = props => (\n  <AuthContext.Consumer>\n    {(context) => {\n      return (\n        <header className=\"main-navigation\">\n          <div className=\"main-navigation__logo\">\n            <h1>Event</h1>\n          </div>\n          <div className=\"main-navigation__items\">\n            <ul>\n              {!context.token && <li>\n                <NavLink to=\"/auth\">Authenticate</NavLink>\n              </li>}\n              <li>\n                <NavLink to=\"/events\">Events</NavLink>\n              </li>\n              {context.token && (\n                <React.Fragment>\n                  <li>\n                    <NavLink to=\"/bookings\">Bookings</NavLink>\n                  </li>\n                  <li>\n                    <button onClick={context.logout}>Logout</button>\n                  </li>\n                </React.Fragment>\n              )}\n            </ul>\n          </div>\n        </header>\n      );\n    }}\n  </AuthContext.Consumer>\n);\n\nexport default mainNavigation;","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\n\nimport AuthPage from './pages/Auth/Auth';\nimport BookingsPage from './pages/Bookings/Bookings';\nimport EventsPage from './pages/Events/Events';\nimport MainNavigation from './components/Navigation/MainNavigation';\nimport AuthContext from './context/auth-context';\n\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    token: null,\n    userId: null\n  };\n\n  login = (token, userId, tokenExpiration) => {\n    this.setState({ token: token, userId: userId });\n  };\n\n  logout = () => {\n    this.setState({ token: null, userId: null });\n  };\n\n  render() {\n    return (\n      <BrowserRouter>\n        <React.Fragment>\n          <AuthContext.Provider\n            value={{\n              token: this.state.token,\n              userId: this.state.userId,\n              login: this.login,\n              logout: this.logout\n            }}>\n            <MainNavigation />\n            <main className=\"main-content\">\n              <Switch>\n                {this.state.token && <Redirect from=\"/\" to=\"/events\" exact />}\n                {this.state.token && (\n                  <Redirect from=\"/auth\" to=\"/events\" exact />\n                )}\n                {!this.state.token && (\n                  <Route path=\"/auth\" component={AuthPage} />\n                )}\n                <Route path=\"/events\" component={EventsPage} />\n                {this.state.token && (\n                  <Route path=\"/bookings\" component={BookingsPage} />\n                )}\n                {!this.state.token && <Redirect to=\"/auth\" exact />}\n              </Switch>\n            </main>\n          </AuthContext.Provider>\n        </React.Fragment>\n      </BrowserRouter >\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}